// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package eks

import (
	"context"

	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  DataSourceAddon,
			TypeName: "aws_eks_addon",
		},
		{
			Factory:  DataSourceAddonVersion,
			TypeName: "aws_eks_addon_version",
		},
		{
			Factory:  DataSourceCluster,
			TypeName: "aws_eks_cluster",
		},
		{
			Factory:  DataSourceClusterAuth,
			TypeName: "aws_eks_cluster_auth",
		},
		{
			Factory:  DataSourceClusters,
			TypeName: "aws_eks_clusters",
		},
		{
			Factory:  DataSourceNodeGroup,
			TypeName: "aws_eks_node_group",
		},
		{
			Factory:  DataSourceNodeGroups,
			TypeName: "aws_eks_node_groups",
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  ResourceAddon,
			TypeName: "aws_eks_addon",
		},
		{
			Factory:  ResourceCluster,
			TypeName: "aws_eks_cluster",
		},
		{
			Factory:  ResourceFargateProfile,
			TypeName: "aws_eks_fargate_profile",
		},
		{
			Factory:  ResourceIdentityProviderConfig,
			TypeName: "aws_eks_identity_provider_config",
		},
		{
			Factory:  ResourceNodeGroup,
			TypeName: "aws_eks_node_group",
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.EKS
}

var ServicePackage = &servicePackage{}
