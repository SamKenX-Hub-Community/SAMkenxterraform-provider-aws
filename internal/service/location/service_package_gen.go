// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package location

import (
	"context"

	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  DataSourceGeofenceCollection,
			TypeName: "aws_location_geofence_collection",
		},
		{
			Factory:  DataSourceMap,
			TypeName: "aws_location_map",
		},
		{
			Factory:  DataSourcePlaceIndex,
			TypeName: "aws_location_place_index",
		},
		{
			Factory:  DataSourceRouteCalculator,
			TypeName: "aws_location_route_calculator",
		},
		{
			Factory:  DataSourceTracker,
			TypeName: "aws_location_tracker",
		},
		{
			Factory:  DataSourceTrackerAssociation,
			TypeName: "aws_location_tracker_association",
		},
		{
			Factory:  DataSourceTrackerAssociations,
			TypeName: "aws_location_tracker_associations",
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  ResourceGeofenceCollection,
			TypeName: "aws_location_geofence_collection",
		},
		{
			Factory:  ResourceMap,
			TypeName: "aws_location_map",
		},
		{
			Factory:  ResourcePlaceIndex,
			TypeName: "aws_location_place_index",
		},
		{
			Factory:  ResourceRouteCalculator,
			TypeName: "aws_location_route_calculator",
		},
		{
			Factory:  ResourceTracker,
			TypeName: "aws_location_tracker",
		},
		{
			Factory:  ResourceTrackerAssociation,
			TypeName: "aws_location_tracker_association",
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.Location
}

var ServicePackage = &servicePackage{}
