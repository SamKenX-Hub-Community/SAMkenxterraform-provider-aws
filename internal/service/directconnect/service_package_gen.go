// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package directconnect

import (
	"context"

	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  DataSourceConnection,
			TypeName: "aws_dx_connection",
		},
		{
			Factory:  DataSourceGateway,
			TypeName: "aws_dx_gateway",
		},
		{
			Factory:  DataSourceLocation,
			TypeName: "aws_dx_location",
		},
		{
			Factory:  DataSourceLocations,
			TypeName: "aws_dx_locations",
		},
		{
			Factory:  DataSourceRouterConfiguration,
			TypeName: "aws_dx_router_configuration",
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  ResourceBGPPeer,
			TypeName: "aws_dx_bgp_peer",
		},
		{
			Factory:  ResourceConnection,
			TypeName: "aws_dx_connection",
		},
		{
			Factory:  ResourceConnectionAssociation,
			TypeName: "aws_dx_connection_association",
		},
		{
			Factory:  ResourceConnectionConfirmation,
			TypeName: "aws_dx_connection_confirmation",
		},
		{
			Factory:  ResourceGateway,
			TypeName: "aws_dx_gateway",
		},
		{
			Factory:  ResourceGatewayAssociation,
			TypeName: "aws_dx_gateway_association",
		},
		{
			Factory:  ResourceGatewayAssociationProposal,
			TypeName: "aws_dx_gateway_association_proposal",
		},
		{
			Factory:  ResourceHostedConnection,
			TypeName: "aws_dx_hosted_connection",
		},
		{
			Factory:  ResourceHostedPrivateVirtualInterface,
			TypeName: "aws_dx_hosted_private_virtual_interface",
		},
		{
			Factory:  ResourceHostedPrivateVirtualInterfaceAccepter,
			TypeName: "aws_dx_hosted_private_virtual_interface_accepter",
		},
		{
			Factory:  ResourceHostedPublicVirtualInterface,
			TypeName: "aws_dx_hosted_public_virtual_interface",
		},
		{
			Factory:  ResourceHostedPublicVirtualInterfaceAccepter,
			TypeName: "aws_dx_hosted_public_virtual_interface_accepter",
		},
		{
			Factory:  ResourceHostedTransitVirtualInterface,
			TypeName: "aws_dx_hosted_transit_virtual_interface",
		},
		{
			Factory:  ResourceHostedTransitVirtualInterfaceAccepter,
			TypeName: "aws_dx_hosted_transit_virtual_interface_accepter",
		},
		{
			Factory:  ResourceLag,
			TypeName: "aws_dx_lag",
		},
		{
			Factory:  ResourceMacSecKeyAssociation,
			TypeName: "aws_dx_macsec_key_association",
		},
		{
			Factory:  ResourcePrivateVirtualInterface,
			TypeName: "aws_dx_private_virtual_interface",
		},
		{
			Factory:  ResourcePublicVirtualInterface,
			TypeName: "aws_dx_public_virtual_interface",
		},
		{
			Factory:  ResourceTransitVirtualInterface,
			TypeName: "aws_dx_transit_virtual_interface",
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.DirectConnect
}

var ServicePackage = &servicePackage{}
